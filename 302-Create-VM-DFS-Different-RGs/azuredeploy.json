{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newStoAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of Storage Account"
      }
    },
    "newStorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS"
      ],
      "metadata": {
        "description": "Type of Storage Account"
      }
    },
    "storageAccountSecureTransfer": {
      "type": "string",
      "defaultValue": "True",
      "allowedValues": [
        "True",
        "False"
      ],
      "metadata": {
        "description": "Enable Secure Transfer (HTTPS)"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Name of the VM"
      }
    },
    "vmAvailabilitySet": {
      "type": "string",
      "metadata": {
        "description": "Name of Availbility Set"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A1_v2",
      "allowedValues": [
        "Standard_A1_v2",
        "Standard_A2m_v2",
        "Standard_A2_v2",
        "Standard_A4m_v2",
        "Standard_A4_v2",
        "Standard_A8m_v2",
        "Standard_A8_v2"
      ],
      "metadata": {
        "description": "Size of the VM"
      }
    },
    "vmDataDiskSizeGB": {
      "type": "int",
      "defaultValue": 10,
      "metadata": {
        "description": "Size of Data Disk 1 in GB"
      }

    },
      "imagePublisher": {
        "type": "string",
        "defaultValue": "MicrosoftWindowsServer",
        "metadata": {
          "description": "Image Publisher"
        }
      },
      "imageOffer": {
        "type": "string",
        "defaultValue": "WindowsServer",
        "metadata": {
          "description": "Image Offer"
        }
      },
      "imageSKU": {
        "type": "string",
        "defaultValue": "2016-Datacenter",
        "allowedValues": [
          "2016-Datacenter"
        ],
        "metadata": {
          "description": "Image SKU"
        }
      },
      "vmWinComputerName": {
        "type": "string",
        "minLength": 4,
        "maxLength": 15,
        "metadata": {
          "description": "Windows Computer Name"
        }
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "VM Admin Username"
        }
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "VM Password"
        }
      },
      "vnNetworkName": {
        "type": "string",
        "metadata": {
          "description": "VNET Name"
        }
      },
      "vnResourceGroup": {
        "type": "string",
        "metadata": {
          "description": "Resource Group VNET is deployed in"
        }
      },
      "vnSubnetName": {
        "type": "string",
        "metadata": {
          "description": "Name of the subnet inside the VNET"
        }
      },
      "nicName": {
        "type": "string",
        "metadata": {
          "description": "Network Interface Name"
        }
      },
      "nicInterfaceType": {
        "type": "string",
        "defaultValue": "Dynamic",
        "allowedValues": [
          "Dynamic",
          "Static"
        ],
        "metadata": {
          "description": "IP Allocation Dynamic or Static"
        }
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
        },
        "defaultValue": "https://raw.githubusercontent.com/vys99AZBuild/AzureAutomation/master/302-Create-VM-DFS-Different-RGs"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access baseURL.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
        },
        "defaultValue": ""
      },


      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      }
    },
  "variables": {
    "updateip_templateUri": "[concat(parameters('_artifactsLocation'), '/nested/update-nic.json', parameters('_artifactsLocationSasToken'))]",
    "vnetID": "[resourceId(parameters('vnResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('vnNetworkName'))]",
    "vnNetworkSubnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('vnSubnetName'))]",
    "vmProvisionVMAgent": "True",
    "vmEnableAutomaticUpdates": "True",
    "vmTimeZone": "GMT Standard Time"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStoAccountName')]",
      "apiVersion": "2018-07-01",
      "sku": {
        "name": "[parameters('newStorageAccountType')]",
        "tier": "Standard"
      },
      "location": "[parameters('location')]",
      "kind": "StorageV2",
      "scale": null,
      "properties": {
        "supportsHttpsTrafficOnly": "[parameters('storageAccountSecureTransfer')]",
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }

      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('nicName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnNetworkSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[concat(parameters('vmName'),'_DataDisk1')]",
      "apiVersion": "2018-04-01",
      "location": "[resourceGroup().location]",
      "sku": {
          "name": "Standard_LRS"
      },
      "properties": {
          "creationData": {
              "createOption": "Empty"
          },
          "diskSizeGB": "[parameters('vmDataDiskSizeGB')]"
      }
  },
    
    {
      "apiVersion": "2018-06-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStoAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('nicName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('vmAvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmWinComputerName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": "[variables('vmProvisionVMAgent')]",
            "enableAutomaticUpdates": "[variables('vmEnableAutomaticUpdates')]",
            "timeZone": "[variables('vmTimeZone')]"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('vmName'),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          },
          
        "dataDisks": [
          {
            "lun": 0,
            "name": "[concat(parameters('vmName'),'_DataDisk1')]",
            "createOption": "Attach",
            "caching": "None",
            "managedDisk": {
              "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('vmName'), '_Datadisk1'))]"
            },
            "diskSizeGB": "[parameters('vmDataDiskSizeGB')]"
          }
        ]
      },


        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',parameters('newStoAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('nicInterfaceType'),'Static')]",
      "type": "Microsoft.Resources/deployments",
      "name": "updateIp",
      "apiVersion": "2017-08-01",
      "dependsOn": [
        "[parameters('nicName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('updateip_templateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nicName": {
            "value": "[parameters('nicName')]"
          },
          "SubnetRef": {
            "value": "[variables('vnNetworkSubnetRef')]"
          },
          "privateIp": {
            "value": "[reference(concat('Microsoft.Network/networkInterfaces/', parameters('nicName'))).ipConfigurations[0].properties.privateIPAddress]"
          }
        }
      }
    }
  ]
}



